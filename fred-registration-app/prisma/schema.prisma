generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

model Attribute {
  AttributeID     Int               @id(map: "PK__Attribut__C189298ACD5909F5") @default(autoincrement())
  Description     String            @unique(map: "UQ__Attribut__4EBBBAC9CD8DDB5F") @db.VarChar(255)
  CourseAttribute CourseAttribute[]
}

model Catalog {
  CatalogID     Int             @id(map: "PK__Catalog__C2513B4800F52A94") @default(autoincrement())
  TermID        Int
  ProgramID     Int
  Program       Program         @relation(fields: [ProgramID], references: [ProgramID], onUpdate: NoAction, map: "FK__Catalog__Program__160F4887")
  Term          Term            @relation(fields: [TermID], references: [TermID], onUpdate: NoAction, map: "FK__Catalog__TermID__151B244E")
  CourseCatalog CourseCatalog[]

  @@unique([TermID, ProgramID], map: "UC_Catalog_TermProgram")
}

model Course {
  CRN                                                           Int                   @id(map: "PK__Course__C1F887FF112BB765") @default(autoincrement())
  CourseCode                                                    String                @unique(map: "UQ__Course__FC00E000A18A6A94") @db.VarChar(64)
  Title                                                         String                @db.VarChar(256)
  Credits                                                       Int
  Level                                                         String                @db.VarChar(64)
  DepartmentID                                                  Int
  Department                                                    Department            @relation(fields: [DepartmentID], references: [DepartmentID], onUpdate: NoAction, map: "FK__Course__Departme__6A30C649")
  CourseAttribute                                               CourseAttribute[]
  CourseCatalog                                                 CourseCatalog[]
  CourseCorequisite_CourseCorequisite_CorequisiteCRNToCourse    CourseCorequisite[]   @relation("CourseCorequisite_CorequisiteCRNToCourse")
  CourseCorequisite_CourseCorequisite_CourseCRNToCourse         CourseCorequisite[]   @relation("CourseCorequisite_CourseCRNToCourse")
  CourseFee                                                     CourseFee[]
  CoursePrerequisite_CoursePrerequisite_CourseCRNToCourse       CoursePrerequisite[]  @relation("CoursePrerequisite_CourseCRNToCourse")
  CoursePrerequisite_CoursePrerequisite_PrerequisiteCRNToCourse CoursePrerequisite[]  @relation("CoursePrerequisite_PrerequisiteCRNToCourse")
  CourseRestriction                                             CourseRestriction[]
  StudentRegistration                                           StudentRegistration[]
}

model CourseAttribute {
  CRN         Int
  AttributeID Int
  Attribute   Attribute @relation(fields: [AttributeID], references: [AttributeID], onDelete: Cascade, onUpdate: NoAction, map: "FK__CourseAtt__Attri__75A278F5")
  Course      Course    @relation(fields: [CRN], references: [CRN], onDelete: Cascade, onUpdate: NoAction, map: "FK__CourseAttri__CRN__74AE54BC")

  @@id([CRN, AttributeID], map: "PK__CourseAt__7DE01567E50142FC")
}

model CourseCatalog {
  CRN                 Int
  CatalogID           Int
  RecommendedSemester String? @db.VarChar(10)
  RecommendedYear     Int?
  Catalog             Catalog @relation(fields: [CatalogID], references: [CatalogID], onUpdate: NoAction, map: "FK__CourseCat__Catal__19DFD96B")
  Course              Course  @relation(fields: [CRN], references: [CRN], onUpdate: NoAction, map: "FK__CourseCatal__CRN__18EBB532")

  @@id([CRN, CatalogID], map: "PK__CourseCa__5DDD944BF47C8911")
}

model CourseCorequisite {
  CourseCRN                                       Int
  CorequisiteCRN                                  Int
  Course_CourseCorequisite_CorequisiteCRNToCourse Course @relation("CourseCorequisite_CorequisiteCRNToCourse", fields: [CorequisiteCRN], references: [CRN], onUpdate: NoAction, map: "FK__CourseCor__Coreq__03F0984C")
  Course_CourseCorequisite_CourseCRNToCourse      Course @relation("CourseCorequisite_CourseCRNToCourse", fields: [CourseCRN], references: [CRN], onUpdate: NoAction, map: "FK__CourseCor__Cours__02FC7413")

  @@id([CourseCRN, CorequisiteCRN], map: "PK__CourseCo__875F7789ACCDB8AA")
}

model CourseFee {
  CRN    Int
  FeeID  Int
  Course Course @relation(fields: [CRN], references: [CRN], onDelete: Cascade, onUpdate: NoAction, map: "FK__CourseFee__CRN__6D0D32F4")
  Fee    Fee    @relation(fields: [FeeID], references: [FeeID], onDelete: Cascade, onUpdate: NoAction, map: "FK__CourseFee__FeeID__6E01572D")

  @@id([CRN, FeeID], map: "PK__CourseFe__4AC0FCDF6DEC08E2")
}

model CoursePrerequisite {
  CourseCRN                                         Int
  PrerequisiteCRN                                   Int
  Course_CoursePrerequisite_CourseCRNToCourse       Course @relation("CoursePrerequisite_CourseCRNToCourse", fields: [CourseCRN], references: [CRN], onUpdate: NoAction, map: "FK__CoursePre__Cours__7F2BE32F")
  Course_CoursePrerequisite_PrerequisiteCRNToCourse Course @relation("CoursePrerequisite_PrerequisiteCRNToCourse", fields: [PrerequisiteCRN], references: [CRN], onUpdate: NoAction, map: "FK__CoursePre__Prere__00200768")

  @@id([CourseCRN, PrerequisiteCRN], map: "PK__CoursePr__5438AF5FA0028D11")
}

model CourseRestriction {
  CRN           Int
  RestrictionID Int
  Restriction   Restriction @relation(fields: [RestrictionID], references: [RestrictionID], onDelete: Cascade, onUpdate: NoAction, map: "FK__CourseRes__Restr__71D1E811")
  Course        Course      @relation(fields: [CRN], references: [CRN], onDelete: Cascade, onUpdate: NoAction, map: "FK__CourseRestr__CRN__70DDC3D8")

  @@id([CRN, RestrictionID], map: "PK__CourseRe__74D15F96083A6114")
}

model CourseSchedule {
  ScheduleID      Int      @id(map: "PK__CourseSc__9C8A5B693F6904EB") @default(autoincrement())
  CRN             Int
  StartDate       DateTime @db.Date
  EndDate         DateTime @db.Date
  Days            String   @db.VarChar(32)
  Time            String   @db.VarChar(32)
  Location        String   @db.VarChar(256)
  InstructorID    Int
  TermID          Int
  Status          String   @db.VarChar(32)
  InstructionMode String   @db.VarChar(32)
}

model Department {
  DepartmentID         Int                    @id(map: "PK__Departme__B2079BCD8DA4FBF4") @default(autoincrement())
  Name                 String                 @unique(map: "UQ__Departme__737584F64E4F9125") @db.VarChar(64)
  Course               Course[]
  Instructor           Instructor[]
  InstructorDepartment InstructorDepartment[]
  Student              Student[]
  StudentDepartment    StudentDepartment[]
}

model Fee {
  FeeID       Int         @id(map: "PK__Fee__B387B209D2223A85") @default(autoincrement())
  Description String      @unique(map: "UQ__Fee__4EBBBAC9BEF814C1") @db.VarChar(255)
  Amount      Decimal     @db.Decimal(10, 2)
  CourseFee   CourseFee[]
}

model Instructor {
  InstructorID         Int                    @id(map: "PK__Instruct__9D010B7B8F890B91") @default(autoincrement())
  FirstName            String                 @db.VarChar(64)
  LastName             String                 @db.VarChar(64)
  DepartmentID         Int
  Department           Department             @relation(fields: [DepartmentID], references: [DepartmentID], onUpdate: NoAction, map: "FK__Instructo__Depar__5EBF139D")
  InstructorDepartment InstructorDepartment[]
}

model InstructorDepartment {
  DepartmentID Int
  InstructorID Int
  Department   Department @relation(fields: [DepartmentID], references: [DepartmentID], onUpdate: NoAction, map: "FK__Instructo__Depar__0B91BA14")
  Instructor   Instructor @relation(fields: [InstructorID], references: [InstructorID], onUpdate: NoAction, map: "FK__Instructo__Instr__0C85DE4D")

  @@id([DepartmentID, InstructorID], map: "PK__Instruct__1BD78B7A269E10CB")
}

model Program {
  ProgramID  Int       @id(map: "PK__Program__7525603884A7973A") @default(autoincrement())
  Name       String    @unique(map: "UQ__Program__737584F66AE33F3D") @db.VarChar(255)
  DegreeType String    @db.VarChar(50)
  Catalog    Catalog[]
}

model Restriction {
  RestrictionID     Int                 @id(map: "PK__Restrict__529D869AFBF43840") @default(autoincrement())
  Description       String              @unique(map: "UQ__Restrict__4EBBBAC9D9198869") @db.VarChar(255)
  CourseRestriction CourseRestriction[]
}

model Student {
  StudentID           Int                   @id(map: "PK__Student__32C52A79CB766D68") @default(autoincrement())
  FirstName           String                @db.VarChar(64)
  LastName            String                @db.VarChar(64)
  Level               String                @db.VarChar(64)
  DepartmentID        Int
  Email               String                @db.VarChar(100)
  Phone               String?               @db.VarChar(20)
  Department          Department            @relation(fields: [DepartmentID], references: [DepartmentID], onUpdate: NoAction, map: "FK__Student__Departm__619B8048")
  StudentDepartment   StudentDepartment[]
  StudentRegistration StudentRegistration[]
}

model StudentDepartment {
  DepartmentID Int
  StudentID    Int
  Department   Department @relation(fields: [DepartmentID], references: [DepartmentID], onUpdate: NoAction, map: "FK__StudentDe__Depar__0F624AF8")
  Student      Student    @relation(fields: [StudentID], references: [StudentID], onUpdate: NoAction, map: "FK__StudentDe__Stude__10566F31")

  @@id([DepartmentID, StudentID], map: "PK__StudentD__312BC96A4F62BF48")
}

model StudentRegistration {
  RegistrationID Int      @id(map: "PK__StudentR__6EF5883055594D16") @default(autoincrement())
  StudentID      Int
  CRN            Int
  TermID         Int
  GradeMode      String   @db.VarChar(32)
  Status         String   @default("Registered", map: "DF__StudentRe__Statu__5FB337D6") @db.VarChar(32)
  Grade          String?  @db.VarChar(32)
  RegisteredOn   DateTime @db.Date
  Student        Student  @relation(fields: [StudentID], references: [StudentID], onUpdate: NoAction, map: "FK__StudentRe__Stude__7A672E12")
  Term           Term     @relation(fields: [TermID], references: [TermID], onUpdate: NoAction, map: "FK__StudentRe__TermI__7C4F7684")
  Course         Course   @relation(fields: [CRN], references: [CRN], onUpdate: NoAction, map: "FK__StudentRegi__CRN__7B5B524B")
}

model Term {
  TermID              Int                   @id(map: "PK__Term__410A2E4516397C0C") @default(autoincrement())
  TermName            String                @unique(map: "UQ__Term__8F610115F503AF03") @db.VarChar(64)
  StartDate           DateTime              @db.Date
  EndDate             DateTime              @db.Date
  Catalog             Catalog[]
  StudentRegistration StudentRegistration[]
}

model GradePoints {
  LetterGrade String  @id(map: "PK__GradePoi__BC0CE0581BB37FCD") @db.VarChar(2)
  GradePoint  Decimal @db.Decimal(3, 2)
}
